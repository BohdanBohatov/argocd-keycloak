apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name     : keycloak-user-3
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    name     : in-cluster
    namespace: keycloak-user-3-ns
  source:
    repoURL: registry-1.docker.io/bitnamicharts
    chart: keycloak
    targetRevision: 24.1.0 
    helm:
      valuesObject:
          global:
            defaultStorageClass: keycloak-user-3-storage

          extraVolumes:
            - name: efs-storage
              persistentVolumeClaim:
                claimName: keycloak-pv-claim

          extraVolumeMounts:
              - name: efs-storage
                mountPath: /opt/bitnami/keycloak/themes

          auth:
            adminUser: user
            adminPassword: PaP$w0R}|{0PeC

          postgresql:
            volumePermissions:
              enabled: true
            auth:
              password: "9t3tggid47"
              postgresPassword: "12345pass"
              username: "db_user"

          ingress:
            enabled: true
            ingressClassName: nginx
            hostname: "alphabetagamazeta.site"
            tls: true
            annotations: 
              "cert-manager.io/issuer" : "keycloak-production"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.org/server-snippets: |
                  location / {
                      proxy_set_header X-Forwarded-For $host;
                      proxy_set_header X-Forwarded-Proto $scheme;
                      proxy_set_header X-Forwarded-Host $host;
                      proxy_set_header X-Forwarded-Server $host;
                      proxy_set_header X-Forwarded-Port $server_port;
                      proxy_set_header X-Forwarded-Proto  $scheme;
                    }
          proxy: "edge"

  syncPolicy:
    automated:
      prune   : true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true